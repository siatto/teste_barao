{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../servicos/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../servicos/usuario.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Login bem-sucedido! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Falha no login! Verifique suas credenciais. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Novo usu\\u00E1rio cadastrado com sucesso! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router, usuarioService) {\n    this.authService = authService;\n    this.router = router;\n    this.usuarioService = usuarioService;\n    this.login = '';\n    this.senha = '';\n    this.validacao = '';\n    this.validacaoFixa = '000000';\n    this.loginSucesso = false;\n    this.loginFalha = false;\n    this.novoUsuarioCadastrado = false;\n    this.novoUsuario = {\n      id: uuidv4(),\n      login: '',\n      senha: ''\n    };\n  }\n  onSubmit() {\n    this.authService.login(this.login, this.senha).subscribe(response => {\n      this.loginSucesso = true;\n      this.loginFalha = false;\n      this.novoUsuarioCadastrado = false;\n      this.authService.setTokenAndScheduleLogout(response.token);\n      this.router.navigate(['/']);\n    }, error => {\n      if (this.validacao === this.validacaoFixa) {\n        this.novoUsuario.login = this.login;\n        this.novoUsuario.senha = this.senha;\n        this.criarUsuario();\n        this.loginSucesso = false;\n        this.loginFalha = false;\n        this.novoUsuarioCadastrado = true;\n      } else {\n        this.loginSucesso = false;\n        this.loginFalha = true;\n        this.novoUsuarioCadastrado = false;\n      }\n    });\n  }\n  criarUsuario() {\n    this.usuarioService.salvarUsuario(this.novoUsuario).subscribe(() => {\n      this.router.navigate(['/estudantes']);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UsuarioService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 6,\n    consts: [[\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-info\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"login\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"login\", \"placeholder\", \"Digite seu usu\\u00E1rio\", \"name\", \"login\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"senha\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"senha\", \"placeholder\", \"Digite sua senha\", \"name\", \"senha\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"validacao\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"validacao\", \"placeholder\", \"Digite os 6 d\\u00EDgitos enviados por email\", \"name\", \"validacao\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-text\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-info\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 2, 0, \"div\", 0);\n        i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 2, 0, \"div\", 1);\n        i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵtext(9, \"Acesso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.login = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n        i0.ɵɵtext(18, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.senha = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 10)(21, \"label\", 15);\n        i0.ɵɵtext(22, \"Valida\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.validacao = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 17);\n        i0.ɵɵtext(25, \"N\\u00E3o implementado, para novos cadastros, utilize \\\"000000\\\"\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"button\", 18);\n        i0.ɵɵtext(27, \"Login\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginSucesso);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginFalha);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.novoUsuarioCadastrado);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.login);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.senha);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.validacao);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["v4","uuidv4","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","authService","router","usuarioService","login","senha","validacao","validacaoFixa","loginSucesso","loginFalha","novoUsuarioCadastrado","novoUsuario","id","onSubmit","subscribe","response","setTokenAndScheduleLogout","token","navigate","error","criarUsuario","salvarUsuario","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","UsuarioService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_1_Template","LoginComponent_div_2_Template","LoginComponent_div_3_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","LoginComponent_Template_input_ngModelChange_15_listener","$event","LoginComponent_Template_input_ngModelChange_19_listener","LoginComponent_Template_input_ngModelChange_23_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\componentes\\login\\login.component.ts","C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\componentes\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../../servicos/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from '../../servicos/usuario.service';\r\nimport { Usuario } from '../../modelos/usuario';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  login: string = '';\r\n  senha: string = '';\r\n  validacao: string = '';\r\n  validacaoFixa: string = '000000';\r\n  loginSucesso: boolean = false;\r\n  loginFalha: boolean = false;\r\n  novoUsuarioCadastrado: boolean = false;\r\n\r\n  novoUsuario: Usuario = {\r\n    id: uuidv4(),\r\n    login: '',\r\n    senha: ''\r\n  };\r\n\r\n  constructor(private authService: AuthService, private router: Router, private usuarioService: UsuarioService) { }\r\n\r\n  onSubmit () {\r\n    this.authService.login(this.login, this.senha)\r\n      .subscribe(\r\n        (response) => {\r\n          this.loginSucesso = true;\r\n          this.loginFalha = false;\r\n          this.novoUsuarioCadastrado = false;\r\n\r\n          this.authService.setTokenAndScheduleLogout(response.token);\r\n          this.router.navigate(['/']);\r\n        },\r\n        (error) => {\r\n          if (this.validacao === this.validacaoFixa) {\r\n            this.novoUsuario.login = this.login;\r\n            this.novoUsuario.senha = this.senha;\r\n            this.criarUsuario();\r\n            this.loginSucesso = false;\r\n            this.loginFalha = false;\r\n            this.novoUsuarioCadastrado = true;\r\n          }\r\n          else {\r\n            this.loginSucesso = false;\r\n            this.loginFalha = true;\r\n            this.novoUsuarioCadastrado = false;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  criarUsuario (): void {\r\n    this.usuarioService.salvarUsuario(this.novoUsuario).subscribe(() => {\r\n      this.router.navigate(['/estudantes']);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <div *ngIf=\"loginSucesso\" class=\"alert alert-success\" role=\"alert\">\r\n      Login bem-sucedido!\r\n    </div>\r\n  \r\n    <div *ngIf=\"loginFalha\" class=\"alert alert-danger\" role=\"alert\">\r\n      Falha no login! Verifique suas credenciais.\r\n    </div>\r\n  \r\n    <div *ngIf=\"novoUsuarioCadastrado\" class=\"alert alert-info\" role=\"alert\">\r\n      Novo usuário cadastrado com sucesso!\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">Acesso</div>\r\n          <div class=\"card-body\">\r\n            <form (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"login\" class=\"form-label\">Login</label>\r\n                <input type=\"text\" id=\"login\" class=\"form-control\" placeholder=\"Digite seu usuário\" [(ngModel)]=\"login\" name=\"login\">\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"senha\" class=\"form-label\">Senha</label>\r\n                <input type=\"password\" id=\"senha\" class=\"form-control\" placeholder=\"Digite sua senha\" [(ngModel)]=\"senha\" name=\"senha\">\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"validacao\" class=\"form-label\">Validação</label>\r\n                <input type=\"text\" id=\"validacao\" class=\"form-control\" placeholder=\"Digite os 6 dígitos enviados por email\" [(ngModel)]=\"validacao\" name=\"validacao\">\r\n                <div class=\"form-text\">Não implementado, para novos cadastros, utilize \"000000\"</div>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}