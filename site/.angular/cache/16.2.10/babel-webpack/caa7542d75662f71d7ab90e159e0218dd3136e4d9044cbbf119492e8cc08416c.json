{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../servicos/auth.service\";\nexport class EstudanteService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:5000/api/estudante';\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  listarEstudantes() {\n    return this.http.get(this.apiUrl);\n  }\n  obterEstudantePorId(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  obterEstudantesPorNome(nome) {\n    return this.http.get(`${this.apiUrl}/por-nome/${nome}`);\n  }\n  salvarEstudante(Estudante) {\n    console.log(Estudante);\n    return this.http.post(this.apiUrl, Estudante, {\n      headers: this.getHeaders()\n    });\n  }\n  atualizarEstudante(Estudante) {\n    return this.http.put(`${this.apiUrl}`, Estudante, {\n      headers: this.getHeaders()\n    });\n  }\n  excluirEstudante(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  static #_ = this.ɵfac = function EstudanteService_Factory(t) {\n    return new (t || EstudanteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EstudanteService,\n    factory: EstudanteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","EstudanteService","constructor","http","authService","apiUrl","getHeaders","token","getToken","listarEstudantes","get","obterEstudantePorId","id","obterEstudantesPorNome","nome","salvarEstudante","Estudante","console","log","post","headers","atualizarEstudante","put","excluirEstudante","delete","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\servicos\\estudante.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Estudante } from '../modelos/estudante';\r\nimport { AuthService } from '../servicos/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstudanteService {\r\n  private apiUrl = 'http://localhost:5000/api/estudante';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const token = this.authService.getToken();\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n  }\r\n\r\n  listarEstudantes(): Observable<Estudante[]> {\r\n    return this.http.get<Estudante[]>(this.apiUrl);\r\n  }\r\n\r\n  obterEstudantePorId(id: string): Observable<Estudante> {\r\n    return this.http.get<Estudante>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  obterEstudantesPorNome(nome: string): Observable<Estudante[]> {\r\n    return this.http.get<Estudante[]>(`${this.apiUrl}/por-nome/${nome}`);\r\n  }\r\n\r\n  salvarEstudante(Estudante: Estudante): Observable<Estudante> {\r\n    console.log(Estudante);\r\n    return this.http.post<Estudante>(this.apiUrl, Estudante, { headers: this.getHeaders() });\r\n  }\r\n\r\n  atualizarEstudante(Estudante: Estudante): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}`, Estudante, { headers: this.getHeaders() });\r\n  }\r\n\r\n  excluirEstudante(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFjD,KAAAC,MAAM,GAAG,qCAAqC;EAEoB;EAElEC,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACzC,OAAO,IAAIR,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;KACjC,CAAC;EACJ;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAc,IAAI,CAACL,MAAM,CAAC;EAChD;EAEAM,mBAAmBA,CAACC,EAAU;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAY,GAAG,IAAI,CAACL,MAAM,IAAIO,EAAE,EAAE,CAAC;EACzD;EAEAC,sBAAsBA,CAACC,IAAY;IACjC,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAc,GAAG,IAAI,CAACL,MAAM,aAAaS,IAAI,EAAE,CAAC;EACtE;EAEAC,eAAeA,CAACC,SAAoB;IAClCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,OAAO,IAAI,CAACb,IAAI,CAACgB,IAAI,CAAY,IAAI,CAACd,MAAM,EAAEW,SAAS,EAAE;MAAEI,OAAO,EAAE,IAAI,CAACd,UAAU;IAAE,CAAE,CAAC;EAC1F;EAEAe,kBAAkBA,CAACL,SAAoB;IACrC,OAAO,IAAI,CAACb,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAACjB,MAAM,EAAE,EAAEW,SAAS,EAAE;MAAEI,OAAO,EAAE,IAAI,CAACd,UAAU;IAAE,CAAE,CAAC;EACnF;EAEAiB,gBAAgBA,CAACX,EAAU;IACzB,OAAO,IAAI,CAACT,IAAI,CAACqB,MAAM,CAAC,GAAG,IAAI,CAACnB,MAAM,IAAIO,EAAE,EAAE,EAAE;MAAEQ,OAAO,EAAE,IAAI,CAACd,UAAU;IAAE,CAAE,CAAC;EACjF;EAAC,QAAAmB,CAAA,G;qBApCUxB,gBAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB/B,gBAAgB;IAAAgC,OAAA,EAAhBhC,gBAAgB,CAAAiC,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}