{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../servicos/auth.service\";\nimport * as i3 from \"../app.config\";\nexport class EstudanteService {\n  constructor(http, authService, appConfig) {\n    this.http = http;\n    this.authService = authService;\n    this.appConfig = appConfig;\n    this.apiUrl = `${this.appConfig.getApiUrl()}/estudante`;\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  listEstudantes() {\n    return this.http.get(this.apiUrl);\n  }\n  getEstudanteById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getEstudantesByName(nome) {\n    return this.http.get(`${this.apiUrl}/por-nome/${nome}`);\n  }\n  saveEstudante(estudante) {\n    // console.log(estudante);\n    return this.http.post(this.apiUrl, estudante, {\n      headers: this.getHeaders()\n    });\n  }\n  updateEstudante(estudante) {\n    return this.http.put(`${this.apiUrl}/${estudante.id}`, estudante, {\n      headers: this.getHeaders()\n    });\n  }\n  deleteEstudante(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  static #_ = this.ɵfac = function EstudanteService_Factory(t) {\n    return new (t || EstudanteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i3.AppConfig));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EstudanteService,\n    factory: EstudanteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","EstudanteService","constructor","http","authService","appConfig","apiUrl","getApiUrl","getHeaders","token","getToken","listEstudantes","get","getEstudanteById","id","getEstudantesByName","nome","saveEstudante","estudante","post","headers","updateEstudante","put","deleteEstudante","delete","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","i3","AppConfig","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\servicos\\estudante.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Estudante } from '../modelos/estudante';\r\nimport { AuthService } from '../servicos/auth.service';\r\n\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstudanteService {\r\n  private apiUrl = `${this.appConfig.getApiUrl()}/estudante`;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService, private appConfig: AppConfig) { }\r\n\r\n  private getHeaders (): HttpHeaders {\r\n    const token = this.authService.getToken();\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n  }\r\n\r\n  listEstudantes (): Observable<Estudante[]> {\r\n    return this.http.get<Estudante[]>(this.apiUrl);\r\n  }\r\n\r\n  getEstudanteById (id: string): Observable<Estudante> {\r\n    return this.http.get<Estudante>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getEstudantesByName (nome: string): Observable<Estudante[]> {\r\n    return this.http.get<Estudante[]>(`${this.apiUrl}/por-nome/${nome}`);\r\n  }\r\n\r\n  saveEstudante (estudante: Estudante): Observable<Estudante> {\r\n    // console.log(estudante);\r\n    return this.http.post<Estudante>(this.apiUrl, estudante, { headers: this.getHeaders() });\r\n  }\r\n\r\n  updateEstudante (estudante: Estudante): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${estudante.id}`, estudante, { headers: this.getHeaders() });\r\n  }\r\n\r\n  deleteEstudante (id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;;AAU9D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB,EAAUC,WAAwB,EAAUC,SAAoB;IAAhF,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,SAAS,GAATA,SAAS;IAFjF,KAAAC,MAAM,GAAG,GAAG,IAAI,CAACD,SAAS,CAACE,SAAS,EAAE,YAAY;EAE8C;EAEhGC,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,OAAO,IAAIV,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUS,KAAK;KACjC,CAAC;EACJ;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAc,IAAI,CAACN,MAAM,CAAC;EAChD;EAEAO,gBAAgBA,CAAEC,EAAU;IAC1B,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAY,GAAG,IAAI,CAACN,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACzD;EAEAC,mBAAmBA,CAAEC,IAAY;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAc,GAAG,IAAI,CAACN,MAAM,aAAaU,IAAI,EAAE,CAAC;EACtE;EAEAC,aAAaA,CAAEC,SAAoB;IACjC;IACA,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAY,IAAI,CAACb,MAAM,EAAEY,SAAS,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACZ,UAAU;IAAE,CAAE,CAAC;EAC1F;EAEAa,eAAeA,CAAEH,SAAoB;IACnC,OAAO,IAAI,CAACf,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAAChB,MAAM,IAAIY,SAAS,CAACJ,EAAE,EAAE,EAAEI,SAAS,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACZ,UAAU;IAAE,CAAE,CAAC;EACnG;EAEAe,eAAeA,CAAET,EAAU;IACzB,OAAO,IAAI,CAACX,IAAI,CAACqB,MAAM,CAAC,GAAG,IAAI,CAAClB,MAAM,IAAIQ,EAAE,EAAE,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACZ,UAAU;IAAE,CAAE,CAAC;EACjF;EAAC,QAAAiB,CAAA,G;qBApCUxB,gBAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBjC,gBAAgB;IAAAkC,OAAA,EAAhBlC,gBAAgB,CAAAmC,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}