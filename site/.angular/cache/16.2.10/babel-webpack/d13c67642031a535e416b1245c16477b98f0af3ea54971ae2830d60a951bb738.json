{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http://localhost:5000/api';\n    this.token = '';\n    this.tempoLogin = 5;\n  }\n  login(login, senha) {\n    const params = new HttpParams().set('login', login).set('senha', senha);\n    return this.http.post(`${this.apiUrl}/auth/login`, {}, {\n      params\n    });\n  }\n  setToken(token) {\n    this.token = token;\n    const expirationTime = new Date().getTime() + this.tempoLogin * 60 * 1000;\n    localStorage.setItem('token', token);\n    localStorage.setItem('tokenExpiration', expirationTime.toString());\n    setTimeout(() => {\n      this.removeToken();\n    }, this.tempoLogin * 60 * 1000);\n  }\n  removeToken() {\n    this.token = '';\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    this.router.navigate(['/login']);\n  }\n  getToken() {\n    return this.token || localStorage.getItem('token') || '';\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  logout() {\n    this.token = '';\n    localStorage.removeItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","AuthService","constructor","http","router","apiUrl","token","tempoLogin","login","senha","params","set","post","setToken","expirationTime","Date","getTime","localStorage","setItem","toString","setTimeout","removeToken","removeItem","navigate","getToken","getItem","isLoggedIn","logout","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\servicos\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'http://localhost:5000/api';\r\n  private token: string = '';\r\n  private tempoLogin: number = 5;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  login(login: string, senha: string): Observable<any> {\r\n    const params = new HttpParams()\r\n      .set('login', login)\r\n      .set('senha', senha);\r\n\r\n    return this.http.post<any>(`${this.apiUrl}/auth/login`, {}, { params });\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  \r\n    const expirationTime = new Date().getTime() + this.tempoLogin * 60 * 1000;\r\n  \r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('tokenExpiration', expirationTime.toString());\r\n  \r\n    setTimeout(() => {\r\n      this.removeToken();\r\n    }, this.tempoLogin * 60 * 1000);\r\n  }\r\n  \r\n  removeToken() {\r\n    this.token = '';\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('tokenExpiration');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getToken(): string {\r\n    return this.token || localStorage.getItem('token') || '';\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  logout() {\r\n    this.token = '';\r\n    localStorage.removeItem('token');\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;;AAO7D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAJ5C,KAAAC,MAAM,GAAG,2BAA2B;IACpC,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,UAAU,GAAW,CAAC;EAEkC;EAEhEC,KAAKA,CAACA,KAAa,EAAEC,KAAa;IAChC,MAAMC,MAAM,GAAG,IAAIV,UAAU,EAAE,CAC5BW,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC,CACnBG,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAEtB,OAAO,IAAI,CAACN,IAAI,CAACS,IAAI,CAAM,GAAG,IAAI,CAACP,MAAM,aAAa,EAAE,EAAE,EAAE;MAAEK;IAAM,CAAE,CAAC;EACzE;EAEAG,QAAQA,CAACP,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAElB,MAAMQ,cAAc,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAG,IAAI,CAACT,UAAU,GAAG,EAAE,GAAG,IAAI;IAEzEU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpCW,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEJ,cAAc,CAACK,QAAQ,EAAE,CAAC;IAElEC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,EAAE,IAAI,CAACd,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC;EACjC;EAEAc,WAAWA,CAAA;IACT,IAAI,CAACf,KAAK,GAAG,EAAE;IACfW,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCL,YAAY,CAACK,UAAU,CAAC,iBAAiB,CAAC;IAC1C,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAAClB,KAAK,IAAIW,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC1D;EAEAC,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,EAAE;EAC1B;EAEAG,MAAMA,CAAA;IACJ,IAAI,CAACrB,KAAK,GAAG,EAAE;IACfW,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;EAAC,QAAAM,CAAA,G;qBA9CU3B,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlC,WAAW;IAAAmC,OAAA,EAAXnC,WAAW,CAAAoC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}