{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class EstudanteLocalidadeService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:5000/api/estudanteLocalidade';\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  listarEstudanteLocalidades() {\n    return this.http.get(this.apiUrl);\n  }\n  obterEstudanteLocalidadePorId(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  obterEstudanteLocalidadePorEstudante(estudanteId) {\n    return this.http.get(`${this.apiUrl}/por-estudante/${estudanteId}`);\n  }\n  salvarEstudanteLocalidade(EstudanteLocalidade) {\n    return this.http.post(this.apiUrl, {\n      id: EstudanteLocalidade.id,\n      estudanteId: EstudanteLocalidade.estudanteId,\n      localidadeId: EstudanteLocalidade.localidadeId\n    }, {\n      headers: this.getHeaders()\n    });\n  }\n  atualizarEstudanteLocalidade(EstudanteLocalidade) {\n    return this.http.put(`${this.apiUrl}`, EstudanteLocalidade, {\n      headers: this.getHeaders()\n    });\n  }\n  excluirEstudanteLocalidade(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  static #_ = this.ɵfac = function EstudanteLocalidadeService_Factory(t) {\n    return new (t || EstudanteLocalidadeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EstudanteLocalidadeService,\n    factory: EstudanteLocalidadeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","EstudanteLocalidadeService","constructor","http","authService","apiUrl","getHeaders","token","getToken","listarEstudanteLocalidades","get","obterEstudanteLocalidadePorId","id","obterEstudanteLocalidadePorEstudante","estudanteId","salvarEstudanteLocalidade","EstudanteLocalidade","post","localidadeId","headers","atualizarEstudanteLocalidade","put","excluirEstudanteLocalidade","delete","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\servicos\\estudanteLocalidade.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EstudanteLocalidade } from '../modelos/estudanteLocalidade';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstudanteLocalidadeService {\r\n  private apiUrl = 'http://localhost:5000/api/estudanteLocalidade';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const token = this.authService.getToken();\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n  }\r\n\r\n  listarEstudanteLocalidades(): Observable<EstudanteLocalidade[]> {\r\n    return this.http.get<EstudanteLocalidade[]>(this.apiUrl);\r\n  }\r\n\r\n  obterEstudanteLocalidadePorId(id: string): Observable<EstudanteLocalidade> {\r\n    return this.http.get<EstudanteLocalidade>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  obterEstudanteLocalidadePorEstudante(estudanteId: string): Observable<EstudanteLocalidade> {\r\n    return this.http.get<EstudanteLocalidade>(`${this.apiUrl}/por-estudante/${estudanteId}`);\r\n  }\r\n\r\n  salvarEstudanteLocalidade(EstudanteLocalidade: EstudanteLocalidade): Observable<EstudanteLocalidade> {\r\n    return this.http.post<EstudanteLocalidade>(this.apiUrl, {\r\n      id: EstudanteLocalidade.id,\r\n      estudanteId: EstudanteLocalidade.estudanteId,\r\n      localidadeId: EstudanteLocalidade.localidadeId\r\n    }, { headers: this.getHeaders() });\r\n  }\r\n\r\n  atualizarEstudanteLocalidade(EstudanteLocalidade: EstudanteLocalidade): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}`, EstudanteLocalidade, { headers: this.getHeaders() });\r\n  }\r\n\r\n  excluirEstudanteLocalidade(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,0BAA0B;EAGrCC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFjD,KAAAC,MAAM,GAAG,+CAA+C;EAEU;EAElEC,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACzC,OAAO,IAAIR,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;KACjC,CAAC;EACJ;EAEAE,0BAA0BA,CAAA;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAwB,IAAI,CAACL,MAAM,CAAC;EAC1D;EAEAM,6BAA6BA,CAACC,EAAU;IACtC,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAsB,GAAG,IAAI,CAACL,MAAM,IAAIO,EAAE,EAAE,CAAC;EACnE;EAEAC,oCAAoCA,CAACC,WAAmB;IACtD,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAsB,GAAG,IAAI,CAACL,MAAM,kBAAkBS,WAAW,EAAE,CAAC;EAC1F;EAEAC,yBAAyBA,CAACC,mBAAwC;IAChE,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAsB,IAAI,CAACZ,MAAM,EAAE;MACtDO,EAAE,EAAEI,mBAAmB,CAACJ,EAAE;MAC1BE,WAAW,EAAEE,mBAAmB,CAACF,WAAW;MAC5CI,YAAY,EAAEF,mBAAmB,CAACE;KACnC,EAAE;MAAEC,OAAO,EAAE,IAAI,CAACb,UAAU;IAAE,CAAE,CAAC;EACpC;EAEAc,4BAA4BA,CAACJ,mBAAwC;IACnE,OAAO,IAAI,CAACb,IAAI,CAACkB,GAAG,CAAC,GAAG,IAAI,CAAChB,MAAM,EAAE,EAAEW,mBAAmB,EAAE;MAAEG,OAAO,EAAE,IAAI,CAACb,UAAU;IAAE,CAAE,CAAC;EAC7F;EAEAgB,0BAA0BA,CAACV,EAAU;IACnC,OAAO,IAAI,CAACT,IAAI,CAACoB,MAAM,CAAC,GAAG,IAAI,CAAClB,MAAM,IAAIO,EAAE,EAAE,EAAE;MAAEO,OAAO,EAAE,IAAI,CAACb,UAAU;IAAE,CAAE,CAAC;EACjF;EAAC,QAAAkB,CAAA,G;qBAvCUvB,0BAA0B,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAA1B9B,0BAA0B;IAAA+B,OAAA,EAA1B/B,0BAA0B,CAAAgC,IAAA;IAAAC,UAAA,EAFzB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}