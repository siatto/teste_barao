{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class AppConfig {\n  constructor() {\n    this.apiUrl = 'http://localhost:5000/api';\n  }\n  getApiUrl() {\n    return this.apiUrl;\n  }\n  getHeaders() {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  static #_ = this.ɵfac = function AppConfig_Factory(t) {\n    return new (t || AppConfig)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppConfig,\n    factory: AppConfig.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","AppConfig","constructor","apiUrl","getApiUrl","getHeaders","token","authService","getToken","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\app.config.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../servicos/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfig {\n  private apiUrl = 'http://localhost:5000/api';\n\n  getApiUrl(): string {\n    return this.apiUrl;\n  }\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n}"],"mappings":"AACA,SAASA,WAAW,QAAQ,sBAAsB;;AAMlD,OAAM,MAAOC,SAAS;EAHtBC,YAAA;IAIU,KAAAC,MAAM,GAAG,2BAA2B;;EAE5CC,SAASA,CAAA;IACP,OAAO,IAAI,CAACD,MAAM;EACpB;EAEQE,UAAUA,CAAA;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACC,WAAW,CAACC,QAAQ,EAAE;IACzC,OAAO,IAAIR,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUM,KAAK;KACjC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBAbUR,SAAS;EAAA;EAAA,QAAAS,EAAA,G;WAATT,SAAS;IAAAU,OAAA,EAATV,SAAS,CAAAW,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}