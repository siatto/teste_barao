{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../app.config\";\nexport class AuthService {\n  constructor(http, router, appConfig) {\n    this.http = http;\n    this.router = router;\n    this.appConfig = appConfig;\n    this.token = '';\n    this.tempoLogin = 5;\n  }\n  getHeaders() {\n    const token = this.getToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  login(login, senha) {\n    const params = new HttpParams().set('login', login).set('senha', senha);\n    return this.http.post(`${this.appConfig.getApiUrl()}/auth/login`, {}, {\n      params\n    });\n  }\n  setTokenAndScheduleLogout(token) {\n    this.token = token;\n    const expirationTime = new Date().getTime() + this.tempoLogin * 60 * 1000;\n    localStorage.setItem('token', token);\n    localStorage.setItem('tokenExpiration', expirationTime.toString());\n    setTimeout(() => {\n      this.removeToken();\n    }, this.tempoLogin * 60 * 1000);\n  }\n  removeToken() {\n    this.token = '';\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    this.router.navigate(['/login']);\n  }\n  getToken() {\n    return this.token || localStorage.getItem('token') || '';\n  }\n  isAuthorize() {\n    const headers = this.getHeaders();\n    return this.http.post(`${this.appConfig.getApiUrl()}/auth/isAuthorize`, {}, {\n      headers\n    }).pipe(map(response => {\n      console.log(\"ok\");\n      return response && response.hasOwnProperty('status') && response.status === 200;\n    }));\n  }\n  isLoggedIn() {\n    const temToken = this.getToken() !== '';\n    return temToken ? this.isAuthorize() : of(false);\n  }\n  logout() {\n    console.log(\"teste\");\n    this.token = '';\n    localStorage.removeItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AppConfig));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","of","AuthService","constructor","http","router","appConfig","token","tempoLogin","getHeaders","getToken","login","senha","params","set","post","getApiUrl","setTokenAndScheduleLogout","expirationTime","Date","getTime","localStorage","setItem","toString","setTimeout","removeToken","removeItem","navigate","getItem","isAuthorize","headers","pipe","map","response","console","log","hasOwnProperty","status","isLoggedIn","temToken","logout","_","i0","ɵɵinject","i1","HttpClient","i2","Router","i3","AppConfig","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\belfe\\OneDrive\\Área de Trabalho\\avaliacao\\avaliacao-dotnet_angular\\site\\src\\app\\servicos\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppConfig } from '../app.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private token: string = '';\r\n  private readonly tempoLogin: number = 5;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private appConfig: AppConfig) { }\r\n\r\n  private getHeaders (): HttpHeaders {\r\n    const token = this.getToken();\r\n    return new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n  }\r\n\r\n  login (login: string, senha: string): Observable<any> {\r\n    const params = new HttpParams()\r\n      .set('login', login)\r\n      .set('senha', senha);\r\n\r\n    return this.http.post<any>(`${this.appConfig.getApiUrl()}/auth/login`, {}, { params });\r\n  }\r\n\r\n  setTokenAndScheduleLogout (token: string) {\r\n    this.token = token;\r\n\r\n    const expirationTime = new Date().getTime() + this.tempoLogin * 60 * 1000;\r\n\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('tokenExpiration', expirationTime.toString());\r\n\r\n    setTimeout(() => {\r\n      this.removeToken();\r\n    }, this.tempoLogin * 60 * 1000);\r\n  }\r\n\r\n  removeToken () {\r\n    this.token = '';\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('tokenExpiration');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getToken (): string {\r\n    return this.token || localStorage.getItem('token') || '';\r\n  }\r\n\r\n  isAuthorize (): Observable<boolean> {\r\n    const headers = this.getHeaders();\r\n    return this.http.post<any>(`${this.appConfig.getApiUrl()}/auth/isAuthorize`, {}, { headers })\r\n      .pipe(\r\n        map(response => {\r\n          console.log(\"ok\");\r\n          return response && response.hasOwnProperty('status') && response.status === 200;\r\n        })\r\n      );\r\n  }\r\n\r\n  isLoggedIn (): Observable<boolean> {\r\n    const temToken = this.getToken() !== '';\r\n    return temToken ? this.isAuthorize() : of(false);\r\n  }\r\n\r\n  logout () {\r\n    console.log(\"teste\");\r\n    this.token = '';\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}